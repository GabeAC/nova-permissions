<?php

use Illuminate\Database\Seeder;
use Illuminate\Support\Str;
use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;
use Spatie\Permission\PermissionRegistrar;
use App\Models\User;

class RolesAndPermissionsSeeder extends Seeder
{
/**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        // Reset cached roles and permissions
        app()[PermissionRegistrar::class]->forgetCachedPermissions();

        $collection = collect([
            User::class,
            Role::class,
            Permission::class,
            // ... // List all your Models you want to have Permissions for.
        ]);

        $collection->each(function ($item, $key) {
            // create permissions for each collection item
            $group = $this->getGroupName($item);
            $permission = $this->getPermissionName($item);

              Permission::create([
                    'group' => $group,
                    'name' =>  $permission . '.view',
                    'description' => 'Allow the user to view a list of ' . strtolower($group) . ' as well as the details'
                    ]);
                    Permission::create([
                        'group' => $group,
                        'name' =>  $permission . '.create',
                        'description' => 'Allow the user to add new ' . strtolower($group)
                    ]);
                    Permission::create([
                        'group' => $group,
                        'name' =>  $permission . '.update',
                        'description' => 'Allow the user to update existing ' . strtolower($group)
                    ]);
                    Permission::create([
                        'group' => $group,
                        'name' =>  $permission . '.delete',
                        'description' => 'Allow the user to delete ' . strtolower($group)
                    ]);
                    Permission::create([
                        'group' => $group,
                        'name' =>  $permission . '.destroy',
                        'description' => 'Allow the user to destroy ' . strtolower($group)
                    ]);
                    Permission::create([
                        'group' => $group,
                        'name' =>  $permission . '.restore',
                        'description' => 'Allow the user to restore ' . strtolower($group)
                    ]);
        });

        // Create a Super-Admin Role and assign all Permissions
        $role = Role::create(['name' => 'admin']);
        $role->givePermissionTo(Permission::all());

        // Give User Super-Admin Role
        // $user = App\Models\User::whereEmail('your@email.com')->first(); // Change this to your email.
        // $user->assignRole('super-admin');
    }

    /**
     * Get group name based on the model class provided
     *
     * @param $class
     *
     * @return string
     */
    private function getGroupName($class)
    {
        return Str::plural(Str::title(Str::snake(class_basename($class), ' ')));
    }

    /**
     * Get permission name based on the model class provided
     *
     * @param $class
     *
     * @return string
     */
    private function getPermissionName($class)
    {
        return Str::plural(Str::snake(class_basename($class), ' '));
    }
}
